//
//  CreateRemainderViewController.swift
//  MirianMAglakelidze#24
//
//  Created by Admin on 8/24/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreateRemainderDisplayLogic: class {
    func displayMessage(viewModel: ModifyRemainder.Info.ViewModel)
}

class ModifyRemainderViewController: UIViewController, CreateRemainderDisplayLogic {
    @IBOutlet weak var remainderTitle: UITextField!
    @IBOutlet weak var remainderInfo: UITextField!
    @IBOutlet weak var dataPicker: UIDatePicker!
    
    var interactor: CreateRemainderBusinessLogic?
    var router: (NSObjectProtocol & CreateRemainderRoutingLogic & CreateRemainderDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        guard let data = router?.dataStore?.remainderData else {
            navigationItem.rightBarButtonItems = [
                UIBarButtonItem(title: "Save", style: .done, target: self, action: #selector(addRemainder))
            ]
            return
        }
        self.remainderTitle.text = data.title
        self.remainderInfo.text = data.info
        self.dataPicker.date = data.date
        navigationItem.rightBarButtonItems = [
            UIBarButtonItem(title: "Edit", style: .done, target: self, action: #selector(editRemainder))
        ]
        
    }
    override func viewWillDisappear(_ animated: Bool) {
        super .viewWillDisappear(true)
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ModifyRemainderInteractor()
        let presenter = ModifyRemainderPresenter()
        let router = ModifyRemainderRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    //    MARK: - @IBOutlet ACTIONS
    
    @objc func addRemainder() {
        if checkFields() {
            showAler(message: "Pleas Fill all Fields")
            return
        }
        let remander = RemainderForm(title: remainderTitle.text ?? "", info: remainderInfo.text ?? "", date: dataPicker.date)
        let request = ModifyRemainder.Info.Request(remainder: remander)
        interactor?.addRemainder(request: request)
    }
    
    @objc func editRemainder() {
        if checkFields() {
            showAler(message: "Pleas Fill all Fields")
            return
        }
        let remander = RemainderForm(title: remainderTitle.text ?? "", info: remainderInfo.text ?? "", date: dataPicker.date)
        let request = ModifyRemainder.Info.Request(remainder: remander)
        interactor?.editRemainder(request: request)
        
    }
    
    func checkFields() -> Bool {
        return remainderInfo.text == "" || remainderTitle.text == ""
    }
    
    //    MARK: - DISPLAY FUNCS
    
    func displayMessage(viewModel: ModifyRemainder.Info.ViewModel) {
        showAler(message: viewModel.massege)
    }
    
    //    MARK: - ALERT
    func showAler(message: String) {
        let alert = UIAlertController(title: "", message: message, preferredStyle: .alert)
        let action = UIAlertAction(title: "Ok", style: .cancel) {[weak self] _ in
            self?.remainderTitle.text = ""
            self?.remainderInfo.text = ""
        }
        
        alert.addAction(action)
        present(alert, animated: true, completion: nil)
    }
}
