//
//  RemainderViewController.swift
//  MirianMAglakelidze#24
//
//  Created by Admin on 8/24/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ReminderDisplayLogic: class {
    func displayRemainders(viewModel: Reminder.ReminderData.ViewModel)
}

class ReminderViewController: UITableViewController, ReminderDisplayLogic {
    var interactor: ReminderBusinessLogic?
    var router: (NSObjectProtocol & ReminderRoutingLogic & ReminderDataPassing)?
    private lazy var longPressGesture = UILongPressGestureRecognizer(target: self, action: #selector(handleLongPress))
    
    private var remainders: [ReminderForm] = []
    private var  tappedCellIndex: Int?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        title = "Reminder"
        tableView.addGestureRecognizer(longPressGesture)
        navigationItem.rightBarButtonItems = [
            UIBarButtonItem(image: UIImage(systemName: "doc.fill.badge.plus")?
                                .withTintColor(UIColor.black,
                                               renderingMode: .alwaysOriginal),
                            style: .done, target: self, action: #selector(addRemainder)),
            
        ]
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(true)
        navigationController?.navigationBar.isHidden = false
        getRemainders()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ReminderInteractor()
        let presenter = ReminderPresenter()
        let router = ReminderRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    //    MARK:- @IBACTIONS
    
    @objc func addRemainder() {
        interactor?.editRemainder(request: Reminder.ReminderData.Request())
        router?.routeToCreateReminder(segue: nil)
    }
    
    @objc private func handleLongPress(sender: UILongPressGestureRecognizer) {
        if sender.state == .began {
            let touchPoint = sender.location(in: tableView)
            if let indexPath = tableView.indexPathForRow(at: touchPoint) {
                tappedCellIndex = indexPath.row
            }
        }
        showActionSheet()
    }
    
    //    MARK: - ACTIONSHEET FUNC
    
    func showActionSheet() {
        let alert = UIAlertController(title: "", message: "Please Select an Option", preferredStyle: .actionSheet)
        alert.addAction(UIAlertAction(title: "Set Remainder", style: .default, handler: { [weak self] _ in
            let request = Reminder.Set.Request(reminder: (self?.remainders[self!.tappedCellIndex!])!)
            self?.register(notification: request.reminder, repeats: false, userInfo: [:])
        }))
        
        alert.addAction(UIAlertAction(title: "Edit", style: .default , handler:{ [weak self] _ in
            let request = Reminder.ReminderData.Request(remainder: self?.remainders[self!.tappedCellIndex!])
            self?.interactor?.editRemainder(request: request)
            self?.router?.routeToCreateReminder(segue: nil)
        }))
        
        alert.addAction(UIAlertAction(title: "Delete", style: .destructive , handler:{ [weak self] _ in
            let request = Reminder.ReminderData.Request(remainder: self?.remainders[self!.tappedCellIndex!])
            self?.interactor?.removeRemainder(request: request)
            self?.remainders.remove(at: self!.tappedCellIndex!)
            self?.tableView.reloadData()
        }))
        
        alert.addAction(UIAlertAction(title: "Dismiss", style: .cancel, handler: nil))
        
        self.present(alert, animated: true, completion: {
            print("completion block")
        })
    }
    
    //   MARK: Do something
    func getRemainders() {
        let request = Reminder.ReminderData.Request()
        interactor?.fetchRemainderFile(request: request)
    }
    
    //    MARK: - DISPLAY FUNC
    func displayRemainders(viewModel: Reminder.ReminderData.ViewModel) {
        remainders = viewModel.remainders
        tableView.reloadData()
    }
    
    func register(notification: ReminderForm, repeats: Bool, userInfo: [AnyHashable : Any]) {
        let userNotification = UNUserNotificationCenter.current()
        //Get Permission status
        userNotification.requestAuthorization(options: [.badge,.alert]) { granted, error in
            if granted {
                DispatchQueue.main.async { [weak self] in
                    let request = Reminder.Set.Request(reminder: notification)
                    self?.interactor?.setRemainder(request: request)
                }
            }
        }
    }
}

// MARK: - EXTENSION TABLE VIEW FUNC

extension ReminderViewController {
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        remainders.count
    }
    
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        TableViewConstatns.remainderTableVieCellHeight
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: "RemaindetTableViewCell", for: indexPath) as? RemaindetTableViewCell else { return UITableViewCell() }
        cell.configure(remainderData: remainders[indexPath.row])
        return cell
    }
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
}
