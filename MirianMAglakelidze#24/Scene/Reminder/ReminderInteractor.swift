//
//  RemainderInteractor.swift
//  MirianMAglakelidze#24
//
//  Created by Admin on 8/24/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ReminderBusinessLogic {
    func fetchRemainderFile(request: Reminder.ReminderData.Request)
    func removeRemainder(request: Reminder.ReminderData.Request)
    func editRemainder(request: Reminder.ReminderData.Request)
    func setRemainder(request: Reminder.Set.Request)
}

protocol ReminderDataStore {
    var name: String { get set }
    var remainderData: ReminderForm? { get set }
}

class ReminderInteractor: ReminderBusinessLogic, ReminderDataStore {

    var presenter: ReminderPresentationLogic?
    var worker: ReminderWorker?
    var name: String = ""
    var remainderData: ReminderForm?
    
    // MARK: Do something
    
    func fetchRemainderFile(request: Reminder.ReminderData.Request) {
        worker = ReminderWorker()
        worker?.getRemaindersFile(directory: name, complition: { [weak self] dataArray in
            let respons = Reminder.ReminderData.Response(objects: dataArray)
            self?.presenter?.presentRemainders(response: respons)
        })
    }
    
    func removeRemainder(request: Reminder.ReminderData.Request) {
        let worker = UpdaterWoker()
        worker.deleteRemainderNote(in: name, remainderTitle: request.remainder!.title)
    }
    
    func editRemainder(request: Reminder.ReminderData.Request) {
        self.remainderData = request.remainder
    }
    
    func setRemainder(request: Reminder.Set.Request) {
        let woker = NotificationWoker()
        woker.addNotification(notification: request.reminder, duration: 5, repeats: false, userInfo: [:])
    }
}
