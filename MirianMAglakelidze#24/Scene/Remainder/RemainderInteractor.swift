//
//  RemainderInteractor.swift
//  MirianMAglakelidze#24
//
//  Created by Admin on 8/24/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RemainderBusinessLogic {
    func fetchRemainderFile(request: Remainder.RemainderData.Request)
    func removeRemainder(request: Remainder.RemainderData.Request)
    func editRemainder(request: Remainder.RemainderData.Request)
}

protocol RemainderDataStore {
    var name: String { get set }
    var remainderData: RemainderForm? { get set }
}

class RemainderInteractor: RemainderBusinessLogic, RemainderDataStore {
    
    
    var presenter: RemainderPresentationLogic?
    var worker: RemainderWorker?
    var name: String = ""
    var remainderData: RemainderForm?
    
    // MARK: Do something
    
    func fetchRemainderFile(request: Remainder.RemainderData.Request) {
        worker = RemainderWorker()
        worker?.getRemaindersFile(directory: name, complition: { [weak self] dataArray in
            let respons = Remainder.RemainderData.Response(objects: dataArray)
            self?.presenter?.presentRemainders(response: respons)
        })
    }

    func removeRemainder(request: Remainder.RemainderData.Request) {
        let worker = UpdaterWoker()
        worker.deleteRemainderNote(in: name, remainderTitle: request.remainder!.title)
    }

    func editRemainder(request: Remainder.RemainderData.Request) {
        self.remainderData = request.remainder
    }
    

}
